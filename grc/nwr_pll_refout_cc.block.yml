# auto-generated by grc.converter

id: nwr_pll_refout_cc
label: PLL Ref Out
category: '[nwr]'

parameters:
-   id: w
    label: Loop Bandwidth
    dtype: real
    default: math.pi/100.0
    hide: ${ ('none' if (w >= 0.0) else 'part') }
-   id: max_freq
    label: Max Freq
    dtype: real
    default: math.pi/(samp_rate/2.0)*f_max
-   id: min_freq
    label: Min Freq
    dtype: real
    default: math.pi/(samp_rate/2.0)*f_min
-   id: df
    label: Damping Factor
    dtype: real
    default: 1.0/math.sqrt(2.0)
    hide: ${ ('none' if (df >= 0.0) else 'part') }
-   id: alpha
    label: Proportional Gain
    dtype: real
    default: '-1.0'
    hide: ${ ('none' if (alpha >= 0.0) else 'part') }
-   id: beta
    label: Integral Gain
    dtype: real
    default: '-1.0'
    hide: ${ ('none' if (beta >= 0.0) else 'part') }

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: complex
-   label: phase_error
    domain: stream
    dtype: float
    optional: true
-   label: phase_inc_inst
    domain: stream
    dtype: float
    optional: true
-   label: phase_inc_avg
    domain: stream
    dtype: float
    optional: true

templates:
    imports: import nwr
    make: nwr.pll_refout_cc(${w}, ${max_freq}, ${min_freq}, ${df}, ${alpha}, ${beta})
    callbacks:
    - set_loop_bandwidth(${w})
    - set_max_freq(${max_freq})
    - set_min_freq(${min_freq})
    - set_damping_factor(${df})
    - set_alpha(${alpha})
    - set_beta(${beta})

file_format: 1
